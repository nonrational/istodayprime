{"version":3,"sources":["helpers.js","App.js","reportWebVitals.js","index.js"],"names":["isPrime","num","i","formatToInt","parts","partTypeList","Number","parseInt","map","partType","partObj","find","part","type","value","val","join","joinParts","TwitterLink","user","href","Footer","to","Bool","Entry","label","Primality","useParams","primeParts","timeZone","longFormatterOpts","year","month","day","longFormatter","Intl","DateTimeFormat","shortFormatterOpts","shortFormatter","longParts","formatToParts","Date","shortParts","number","id","getNumericDates","region","locale","prime","euroPrime","filter","startsWith","some","usPrime","isoPrime","intlPrime","taPrime","anyPrime","className","GeoRedirect","resolvedOptions","useHistory","push","App","basename","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15581b95.chunk.js","sourcesContent":["export const isPrime = (num) => {\n  if (num <= 1) {\n    return true\n  } else if (num <= 3) {\n    return true\n  } else if (num % 2 === 0 || num % 3 === 0) {\n    return false\n  }\n\n  let i = 5\n  while (i * i <= num) {\n    if (num % i === 0 || num % (i + 2) === 0) {\n      return false\n    }\n    i += 6\n  }\n  return true\n}\n\n// get the value out of a type/value result from formatToParts\nconst val = (partObj, partType) => partObj.find((part) => part.type === partType).value\nconst joinParts = (parts, partTypeList) => partTypeList.map((partType) => val(parts, partType)).join('')\nconst formatToInt = (parts, partTypeList) => Number.parseInt(joinParts(parts, partTypeList))\n\nexport const getNumericDates = (timeZone) => {\n  const longFormatterOpts = { timeZone: timeZone, year: 'numeric', month: '2-digit', day: '2-digit' }\n  const longFormatter = new Intl.DateTimeFormat([], longFormatterOpts)\n\n  const shortFormatterOpts = { timeZone: timeZone, year: '2-digit', month: '2-digit', day: '2-digit' }\n  const shortFormatter = new Intl.DateTimeFormat([], shortFormatterOpts)\n\n  const longParts = longFormatter.formatToParts(new Date())\n  const shortParts = shortFormatter.formatToParts(new Date())\n\n  return [\n    { number: formatToInt(longParts, ['year', 'month', 'day']), id: 'iso' },\n    { number: formatToInt(longParts, ['month', 'day', 'year']), id: 'us' },\n    { number: formatToInt(longParts, ['day', 'month', 'year']), id: 'eu' },\n    { number: formatToInt(shortParts, ['month', 'day', 'year']), id: 'us-short' },\n    { number: formatToInt(shortParts, ['day', 'month', 'year']), id: 'eu-short' },\n  ]\n}\n","import './App.css'\nimport { BrowserRouter as Router, Link, Route, Switch, useHistory, useParams } from 'react-router-dom'\nimport { isPrime, getNumericDates } from './helpers'\n\nconst TwitterLink = ({ user }) => <a href={`https://twitter.com/${user}`}>@{user}</a>\n\nconst Footer = () => {\n  return (\n    <footer>\n      <span>\n        <Link to='/'>is today prime?</Link> — built by <TwitterLink user='nonrational' /> — inspired by{' '}\n        <TwitterLink user='JohnDCook' /> &amp; <TwitterLink user='daniel_egan' />\n      </span>\n    </footer>\n  )\n}\nconst Bool = ({ val }) => (val ? 'true' : 'false')\nconst Entry = ({ label, val }) => (\n  <p>\n    {label} &rarr; <Bool val={val} />\n  </p>\n)\n\nconst Primality = () => {\n  const { region, locale } = useParams()\n  const zone = [region, locale].join('/')\n\n  const primeParts = getNumericDates(zone).map(({ number, id }) => ({ id, num: number, prime: isPrime(number) }))\n\n  const euroPrime = primeParts.filter(({ id }) => id.startsWith('eu')).some(({ prime }) => prime)\n  const usPrime = primeParts.filter(({ id }) => id.startsWith('us')).some(({ prime }) => prime)\n  const isoPrime = primeParts.filter(({ id }) => id.startsWith('iso')).some(({ prime }) => prime)\n\n  const intlPrime = euroPrime && usPrime && isoPrime\n  const taPrime = euroPrime && usPrime\n  const anyPrime = euroPrime || usPrime || isoPrime\n\n  return (\n    <>\n      <h1 className='overall'>{anyPrime ? 'Yup.' : 'Nope.'}</h1>\n      <div>\n        {primeParts.map(({ num, prime }) => (\n          <Entry key={num} label={num} val={prime} />\n        ))}\n        {/* <a href='https://www.johndcook.com/blog/2013/11/29/todays-a-prime-day/'>ℹ️</a></span>} */}\n        <Entry label='international prime' val={intlPrime} />\n        <Entry label='transatlantic prime' val={taPrime} />\n      </div>\n    </>\n  )\n}\n\nconst GeoRedirect = () => {\n  const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone\n  useHistory().push(`/${timeZone}`)\n  return null\n}\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Router basename={'/istodayprime'}>\n        <Switch>\n          <Route path='/:region/:locale' component={Primality} />\n          <Route path='/' component={GeoRedirect} />\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}